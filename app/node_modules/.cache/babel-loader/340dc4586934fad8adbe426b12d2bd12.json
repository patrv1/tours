{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick Lupuwana\\\\Downloads\\\\tours\\\\app\\\\src\\\\GroupEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { instanceOf } from 'prop-types';\nimport { Cookies, withCookies } from 'react-cookie';\n\nclass GroupEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      address: '',\n      city: '',\n      stateOrProvince: '',\n      country: '',\n      postalCode: ''\n    };\n    const {\n      cookies\n    } = props;\n    this.state = {\n      item: this.emptyItem,\n      csrfToken: cookies.get('XSRF-TOKEN')\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      try {\n        const group = await (await fetch(`/api/group/${this.props.match.params.id}`, {\n          credentials: 'include'\n        })).json();\n        this.setState({\n          item: group\n        });\n      } catch (error) {\n        this.props.history.push('/');\n      }\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item,\n      csrfToken\n    } = this.state;\n    await fetch('/api/group' + (item.id ? '/' + item.id : ''), {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'X-XSRF-TOKEN': csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item),\n      credentials: 'include'\n    });\n    this.props.history.push('/groups');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, item.id ? 'Edit Group' : 'Add Group');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: item.name || '',\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      id: \"address\",\n      value: item.address || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      id: \"city\",\n      value: item.city || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"stateOrProvince\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"State/Province\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"stateOrProvince\",\n      id: \"stateOrProvince\",\n      value: item.stateOrProvince || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"country\",\n      id: \"country\",\n      value: item.country || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"postalCode\",\n      id: \"postalCode\",\n      value: item.postalCode || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nGroupEdit.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(withRouter(GroupEdit));","map":{"version":3,"sources":["C:/Users/Patrick Lupuwana/Downloads/tours/app/src/GroupEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","instanceOf","Cookies","withCookies","GroupEdit","constructor","props","emptyItem","name","address","city","stateOrProvince","country","postalCode","cookies","state","item","csrfToken","get","handleChange","bind","handleSubmit","componentDidMount","match","params","id","group","fetch","credentials","json","setState","error","history","push","event","target","value","preventDefault","method","headers","body","JSON","stringify","render","title","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { instanceOf } from 'prop-types';\r\nimport { Cookies, withCookies } from 'react-cookie';\r\n\r\nclass GroupEdit extends Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    address: '',\r\n    city: '',\r\n    stateOrProvince: '',\r\n    country: '',\r\n    postalCode: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {cookies} = props;\r\n    this.state = {\r\n      item: this.emptyItem,\r\n      csrfToken: cookies.get('XSRF-TOKEN')\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      try {\r\n        const group = await (await fetch(`/api/group/${this.props.match.params.id}`, {credentials: 'include'})).json();\r\n        this.setState({item: group});\r\n      } catch (error) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item, csrfToken} = this.state;\r\n\r\n    await fetch('/api/group' + (item.id ? '/' + item.id : ''), {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'X-XSRF-TOKEN': csrfToken,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n      credentials: 'include'\r\n    });\r\n    this.props.history.push('/groups');\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit Group' : 'Add Group'}</h2>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                   onChange={this.handleChange} autoComplete=\"name\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"address\">Address</Label>\r\n            <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\r\n                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"city\">City</Label>\r\n            <Input type=\"text\" name=\"city\" id=\"city\" value={item.city || ''}\r\n                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n          </FormGroup>\r\n          <div className=\"row\">\r\n            <FormGroup className=\"col-md-4 mb-3\">\r\n              <Label for=\"stateOrProvince\">State/Province</Label>\r\n              <Input type=\"text\" name=\"stateOrProvince\" id=\"stateOrProvince\" value={item.stateOrProvince || ''}\r\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n            </FormGroup>\r\n            <FormGroup className=\"col-md-5 mb-3\">\r\n              <Label for=\"country\">Country</Label>\r\n              <Input type=\"text\" name=\"country\" id=\"country\" value={item.country || ''}\r\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n            </FormGroup>\r\n            <FormGroup className=\"col-md-3 mb-3\">\r\n              <Label for=\"country\">Postal Code</Label>\r\n              <Input type=\"text\" name=\"postalCode\" id=\"postalCode\" value={item.postalCode || ''}\r\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n            </FormGroup>\r\n          </div>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/groups\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withCookies(withRouter(GroupEdit));"]},"metadata":{},"sourceType":"module"}