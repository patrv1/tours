{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick Lupuwana\\\\Downloads\\\\tours\\\\app\\\\src\\\\GroupList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      cookies\n    } = props;\n    this.state = {\n      groups: [],\n      csrfToken: cookies.get('XSRF-TOKEN'),\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('/api/groups', {\n      credentials: 'include'\n    }).then(response => response.json()).then(data => this.setState({\n      groups: data,\n      isLoading: false\n    })).catch(() => this.props.history.push('/'));\n  }\n\n  async remove(id) {\n    await fetch(`/api/group/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(() => {\n      let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n      this.setState({\n        groups: updatedGroups\n      });\n    });\n  }\n\n  render() {\n    const {\n      groups,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const groupList = groups.map(group => {\n      const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: group.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          whiteSpace: 'nowrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, group.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, address), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, group.events.map(event => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: event.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }\n        }, new Intl.DateTimeFormat('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: '2-digit'\n        }).format(new Date(event.date)), \": \", event.title);\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        color: \"primary\",\n        tag: Link,\n        to: \"/groups/\" + group.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: () => this.remove(group.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Delete\"))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/groups/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Add Group\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"My JUG Tour\"), /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Events\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, groupList))));\n  }\n\n}\n\nGroupList.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(withRouter(GroupList));","map":{"version":3,"sources":["C:/Users/Patrick Lupuwana/Downloads/tours/app/src/GroupList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","withRouter","instanceOf","withCookies","Cookies","GroupList","constructor","props","cookies","state","groups","csrfToken","get","isLoading","remove","bind","componentDidMount","setState","fetch","credentials","then","response","json","data","catch","history","push","id","method","headers","updatedGroups","filter","i","render","groupList","map","group","address","city","stateOrProvince","whiteSpace","name","events","event","Intl","DateTimeFormat","year","month","day","format","Date","date","title","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\nclass GroupList extends Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {cookies} = props;\r\n    this.state = {groups: [], csrfToken: cookies.get('XSRF-TOKEN'), isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch('/api/groups', {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(data => this.setState({groups: data, isLoading: false}))\r\n      .catch(() => this.props.history.push('/'));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`/api/group/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'X-XSRF-TOKEN': this.state.csrfToken,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(() => {\r\n        let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\r\n        this.setState({groups: updatedGroups});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {groups, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const groupList = groups.map(group => {\r\n      const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\r\n      return <tr key={group.id}>\r\n        <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\r\n        <td>{address}</td>\r\n        <td>{group.events.map(event => {\r\n          return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: '2-digit'\r\n          }).format(new Date(event.date))}: {event.title}</div>\r\n        })}</td>\r\n        <td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\r\n          </div>\r\n          <h3>My JUG Tour</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"20%\">Name</th>\r\n              <th width=\"20%\">Location</th>\r\n              <th>Events</th>\r\n              <th width=\"10%\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {groupList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(withRouter(GroupList));\r\n\r\n"]},"metadata":{},"sourceType":"module"}